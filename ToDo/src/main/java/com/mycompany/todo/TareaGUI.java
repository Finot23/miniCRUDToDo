/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.todo;

import javax.swing.table.DefaultTableModel; 
import javax.swing.JOptionPane; 
import java.util.List; 
import java.util.Date; 
import java.text.SimpleDateFormat; 
import java.text.ParseException; 


/**
 *
 * @author antoniosalinas
 */
public class TareaGUI extends javax.swing.JFrame {

    // Instancias de DAO y Modelo de Tabla
    private TareaDAO tareaDAO; // Objeto para interactuar con la base de datos
    private DefaultTableModel tableModel; // Modelo de datos para la JTable
    private SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd"); // Formato para la columna de fecha

    
    
    /**
     * Creates new form TareaGUI
     */
    public TareaGUI() {
        initComponents();
        // Inicializa el DAO y configura la tabla al iniciar la aplicación
        tareaDAO = new TareaDAO();
        configurarTabla(); // Define las columnas y propiedades de la tabla
        cargarTareasEnTabla(); // Carga las tareas existentes de la base de datos en la tabla
    }

    private void configurarTabla() {
        // Define los nombres de las columnas. Asegúrate de que coincidan con los atributos de tu clase Tarea.
        String[] columnNames = {"ID", "Título", "Descripción", "Estado", "Fecha Límite"};

        // Crea un DefaultTableModel personalizado
        tableModel = new DefaultTableModel(columnNames, 0) {
            @Override
            public boolean isCellEditable(int row, int column) {
                // La columna 'ID' (índice 0) no es editable, ya que es generada por la DB o fija.
                // Todas las demás columnas son editables.
                return column != 0;
            }

            @Override
            public Class<?> getColumnClass(int columnIndex) {
                // Indica a la JTable el tipo de dato de cada columna para un mejor renderizado y edición.
                if (columnIndex == 4) { // Si es la columna "Fecha Límite" (índice 4)
                    return Date.class; // Devolver Date.class para que JTable la trate como una fecha
                }
                return Object.class; // Para el resto de columnas, tipo Object
            }
        };
        tareasTable.setModel(tableModel); // Asigna el modelo a la JTable

        // Ajusta el ancho preferido de las columnas
        tareasTable.getColumnModel().getColumn(0).setPreferredWidth(40);  // ID
        tareasTable.getColumnModel().getColumn(1).setPreferredWidth(150); // Título
        tareasTable.getColumnModel().getColumn(2).setPreferredWidth(250); // Descripción
        tareasTable.getColumnModel().getColumn(3).setPreferredWidth(100); // Estado
        tareasTable.getColumnModel().getColumn(4).setPreferredWidth(100); // Fecha Límite
    }

    private void cargarTareasEnTabla() {
        tableModel.setRowCount(0); // Limpia todas las filas existentes en el modelo de la tabla

        // Obtiene todas las tareas usando el TareaDAO
        List<Tarea> tareas = tareaDAO.obtenerTodasLasTareas();

        // Itera sobre la lista de tareas y añade cada una como una nueva fila en la tabla
        for (Tarea tarea : tareas) {
            Object[] rowData = {
                tarea.getId(),
                tarea.getTitulo(),
                tarea.getDescripcion(),
                tarea.getEstado(),
                tarea.getFechaLimite() // La fecha se añade como un objeto Date
            };
            tableModel.addRow(rowData);
        }
    }
    
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnlBg = new javax.swing.JPanel();
        pnlPrincipal = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tareasTable = new javax.swing.JTable();
        btnAgregarTarea = new javax.swing.JButton();
        btnEliminarTarera = new javax.swing.JButton();
        btnGuardarTarea = new javax.swing.JButton();
        pnlSuperior = new javax.swing.JPanel();
        lblTitle = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        pnlBg.setBackground(new java.awt.Color(204, 204, 204));

        tareasTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tareasTable);

        btnAgregarTarea.setText("Agergar nueva tarea");
        btnAgregarTarea.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgregarTareaActionPerformed(evt);
            }
        });

        btnEliminarTarera.setText("Eliminnar Tarea");
        btnEliminarTarera.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarTareraActionPerformed(evt);
            }
        });

        btnGuardarTarea.setText("Guardar tarea");
        btnGuardarTarea.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarTareaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlPrincipalLayout = new javax.swing.GroupLayout(pnlPrincipal);
        pnlPrincipal.setLayout(pnlPrincipalLayout);
        pnlPrincipalLayout.setHorizontalGroup(
            pnlPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlPrincipalLayout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addGroup(pnlPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 922, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(pnlPrincipalLayout.createSequentialGroup()
                        .addGap(248, 248, 248)
                        .addComponent(btnAgregarTarea)
                        .addGap(18, 18, 18)
                        .addComponent(btnEliminarTarera)
                        .addGap(18, 18, 18)
                        .addComponent(btnGuardarTarea)))
                .addContainerGap(33, Short.MAX_VALUE))
        );
        pnlPrincipalLayout.setVerticalGroup(
            pnlPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlPrincipalLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 442, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(pnlPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAgregarTarea)
                    .addComponent(btnEliminarTarera)
                    .addComponent(btnGuardarTarea))
                .addContainerGap(17, Short.MAX_VALUE))
        );

        lblTitle.setText("Administrador de tareas");

        javax.swing.GroupLayout pnlSuperiorLayout = new javax.swing.GroupLayout(pnlSuperior);
        pnlSuperior.setLayout(pnlSuperiorLayout);
        pnlSuperiorLayout.setHorizontalGroup(
            pnlSuperiorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlSuperiorLayout.createSequentialGroup()
                .addGap(418, 418, 418)
                .addComponent(lblTitle)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        pnlSuperiorLayout.setVerticalGroup(
            pnlSuperiorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlSuperiorLayout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addComponent(lblTitle)
                .addContainerGap(28, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout pnlBgLayout = new javax.swing.GroupLayout(pnlBg);
        pnlBg.setLayout(pnlBgLayout);
        pnlBgLayout.setHorizontalGroup(
            pnlBgLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlSuperior, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(pnlBgLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pnlPrincipal, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        pnlBgLayout.setVerticalGroup(
            pnlBgLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlBgLayout.createSequentialGroup()
                .addComponent(pnlSuperior, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(pnlPrincipal, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlBg, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlBg, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnAgregarTareaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgregarTareaActionPerformed
        
        tableModel.addRow(new Object[]{0, "", "", "", null});

       
        int lastRow = tareasTable.getRowCount() - 1;
        tareasTable.setRowSelectionInterval(lastRow, lastRow);
        tareasTable.scrollRectToVisible(tareasTable.getCellRect(lastRow, 0, true));
    }//GEN-LAST:event_btnAgregarTareaActionPerformed

    private void btnEliminarTareraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarTareraActionPerformed
        // TODO add your handling code here:
        int selectedRow = tareasTable.getSelectedRow(); // Obtiene el índice de la fila seleccionada
        if (selectedRow == -1) {
            JOptionPane.showMessageDialog(this, "Por favor, selecciona una fila para eliminar.", "Advertencia", JOptionPane.WARNING_MESSAGE);
            return;
        }

        // Obtener el ID de la tarea de la primera columna de la fila seleccionada
        int tareaId = (int) tableModel.getValueAt(selectedRow, 0);

        // Confirmación para eliminar la tarea
        int confirm = JOptionPane.showConfirmDialog(this, "¿Estás seguro de que quieres eliminar la tarea seleccionada?", "Confirmar Eliminación", JOptionPane.YES_NO_OPTION);

        if (confirm == JOptionPane.YES_OPTION) {
            if (tareaId == 0) { // Si el ID es 0, es una fila que se acaba de agregar y no está en la DB
                tableModel.removeRow(selectedRow); // Simplemente la elimina de la tabla
                JOptionPane.showMessageDialog(this, "Fila nueva eliminada de la tabla.", "Eliminación Exitosa", JOptionPane.INFORMATION_MESSAGE);
            } else { // Si el ID es > 0, es una tarea existente en la base de datos
                if (tareaDAO.eliminarTarea(tareaId)) { // Intenta eliminar de la base de datos
                    tableModel.removeRow(selectedRow); // Si es exitoso, elimina también de la tabla
                    JOptionPane.showMessageDialog(this, "Tarea eliminada exitosamente de la base de datos.", "Eliminación Exitosa", JOptionPane.INFORMATION_MESSAGE);
                } else {
                    JOptionPane.showMessageDialog(this, "Error al eliminar la tarea de la base de datos.", "Error", JOptionPane.ERROR_MESSAGE);
                }
            }
        }
        
    }//GEN-LAST:event_btnEliminarTareraActionPerformed

    private void btnGuardarTareaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarTareaActionPerformed
        // TODO add your handling code here:
        int selectedRow = tareasTable.getSelectedRow(); // Obtiene el índice de la fila seleccionada
        if (selectedRow == -1) {
            JOptionPane.showMessageDialog(this, "Por favor, selecciona una fila para guardar o agregar.", "Advertencia", JOptionPane.WARNING_MESSAGE);
            return;
        }

        // Obtener los datos de las celdas de la fila seleccionada
        int id = (int) tableModel.getValueAt(selectedRow, 0);
        String titulo = (String) tableModel.getValueAt(selectedRow, 1);
        String descripcion = (String) tableModel.getValueAt(selectedRow, 2);
        String estado = (String) tableModel.getValueAt(selectedRow, 3);
        Object fechaObj = tableModel.getValueAt(selectedRow, 4); // Puede ser String o Date

        Date fechaLimite = null;
        if (fechaObj != null) {
            if (fechaObj instanceof Date) { 
                fechaLimite = (Date) fechaObj;
            } else if (fechaObj instanceof String && !((String) fechaObj).trim().isEmpty()) {
                try {
                    
                    fechaLimite = dateFormat.parse(((String) fechaObj).trim());
                } catch (ParseException e) {
                    JOptionPane.showMessageDialog(this, "Formato de fecha inválido en la fila seleccionada. Usa el formato YYYY-MM-DD.", "Error de Formato", JOptionPane.ERROR_MESSAGE);
                    return; 
                }
            }
        }

        
        if (titulo.trim().isEmpty() || descripcion.trim().isEmpty() || estado.trim().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Título, descripción y estado no pueden estar vacíos.", "Error de Validación", JOptionPane.ERROR_MESSAGE);
            return;
        }

        // Crea un objeto Tarea con los datos de la fila
        Tarea tarea = new Tarea(id, titulo, descripcion, estado, fechaLimite);

        if (id == 0) { 
            if (tareaDAO.insertarTarea(tarea)) { 
                
                tableModel.setValueAt(tarea.getId(), selectedRow, 0);
                JOptionPane.showMessageDialog(this, "Nueva tarea agregada exitosamente.", "Éxito", JOptionPane.INFORMATION_MESSAGE);
            } else {
                JOptionPane.showMessageDialog(this, "Error al agregar la nueva tarea.", "Error", JOptionPane.ERROR_MESSAGE);
            }
        } else { 
            if (tareaDAO.actualizarTarea(tarea)) { // Intenta actualizar la tarea en la base de datos
                JOptionPane.showMessageDialog(this, "Tarea actualizada exitosamente.", "Éxito", JOptionPane.INFORMATION_MESSAGE);
            } else {
                JOptionPane.showMessageDialog(this, "Error al actualizar la tarea.", "Error", JOptionPane.ERROR_MESSAGE);
            }
        }
        
        cargarTareasEnTabla();
    }//GEN-LAST:event_btnGuardarTareaActionPerformed

    /**
     * @param args the command line arguments
     */
//    public static void main(String args[]) {
//        /* Set the Nimbus look and feel */
//        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
//        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
//         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
//         */
//        try {
//            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
//                if ("Nimbus".equals(info.getName())) {
//                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
//                    break;
//                }
//            }
//        } catch (ClassNotFoundException ex) {
//            java.util.logging.Logger.getLogger(TareaGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (InstantiationException ex) {
//            java.util.logging.Logger.getLogger(TareaGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (IllegalAccessException ex) {
//            java.util.logging.Logger.getLogger(TareaGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
//            java.util.logging.Logger.getLogger(TareaGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        }
//        //</editor-fold>
//
//        /* Create and display the form */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                new TareaGUI().setVisible(true);
//            }
//        });
//    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAgregarTarea;
    private javax.swing.JButton btnEliminarTarera;
    private javax.swing.JButton btnGuardarTarea;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblTitle;
    private javax.swing.JPanel pnlBg;
    private javax.swing.JPanel pnlPrincipal;
    private javax.swing.JPanel pnlSuperior;
    private javax.swing.JTable tareasTable;
    // End of variables declaration//GEN-END:variables
}
